spring.application.name=ai-diary-backend

# --- Server ---
server.port=8080

# --- DataSource: H2（メモリDB）で起動確認 ---
# spring.datasource.url=jdbc:h2:mem:ai_diary;DB_CLOSE_DELAY=-1;MODE=PostgreSQL
# spring.datasource.driver-class-name=org.h2.Driver
# spring.datasource.username=sa
# spring.datasource.password=

# --- H2 Console（任意） ---
# spring.h2.console.enabled=true
# spring.h2.console.path=/h2-console

# --- JPA ---
spring.jpa.hibernate.ddl-auto=none
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.show-sql=false

# 常にpostgresで起動する場合
spring.profiles.active=postgres

# 一時的な詳細ログ
debug=true
logging.level.org.springframework.boot.autoconfigure=INFO
logging.level.com.example.ai_diary.backend.ai=DEBUG

# --- JWT ---
security.jwt.secret=your-very-long-64+chars-secret-please-change-me-1234567890ABCDEF
security.jwt.expiration-ms=86400000
# セキュリティフィルターのON/OFF
security.jwt.filter.enabled=false

# Swagger UI
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true

# ページ制御
paging.default-size=20
paging.max-size=50

# --- OpenAI ---
openai.api.key=${OPENAI_API_KEY}
openai.api.url=https://api.openai.com/v1/chat/completions
openai.request.timeout-ms=30000
openai.model=gpt-4o-mini

# AI生成スイッチ：false にすれば生成を即オフ
ai.enabled=false

# --- Actuator（起動確認用） ---
management.endpoints.web.exposure.include=health,info

